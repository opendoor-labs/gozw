// Code generated by go-bindata.
// sources:
// data/zwave-defs.xml
// templates/command-classes.tpl
// templates/command-struct-fields.tpl
// templates/command.tpl
// templates/devices.tpl
// templates/marshal-command-param.tpl
// templates/marshal-command-params.tpl
// templates/marshal-command-vg-params.tpl
// templates/marshal-variant.tpl
// templates/unmarshal-command-param.tpl
// templates/unmarshal-command-params.tpl
// templates/unmarshal-command-vg-params.tpl
// templates/unmarshal-variant.tpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

func dataZwaveDefsXml() (*asset, error) {
	// FIXME
	// Remove this
	data, err := ioutil.ReadFile("../gen/data/zwave-defs.xml")
	if err != nil {
		return nil, err
	}
	a := &asset{bytes: data, info: nil}
	return a, nil
}

var _templatesCommandClassesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xc1\x4a\xf3\x40\x14\x46\xf7\xf7\x29\x3e\x02\x3f\x24\xf0\x9b\xe8\x56\x70\x51\x9a\xb4\x0d\x6a\x03\x26\x15\x5d\x8e\xd3\x9b\x1a\xda\x4c\x6a\x66\x4a\x2d\xc3\x7d\x77\x69\xec\x42\x22\xb8\xfb\x86\x73\xe6\x72\x92\x04\xd5\x22\x2f\x31\xcb\x1f\x32\xe4\x25\x26\xab\xaa\xb8\x9a\x67\xcb\xec\x69\x52\x65\x29\x25\x09\xd2\x02\xcb\xa2\xc2\x63\x91\xe6\xb3\x57\xa2\xbd\xd2\x5b\xb5\x61\x68\x4d\xa4\x3b\x63\x1d\x42\x02\xbc\xef\x95\xd9\x30\xe2\x69\xd7\xb6\xca\xac\xa7\x3b\x65\x2d\x5b\x91\x81\xc5\x73\x76\xd3\xb3\xbb\x54\x2d\x8b\xe0\xa7\x94\xa7\xb8\x3b\x2b\xf7\x7c\x12\xf1\x9e\xcd\x5a\x84\x22\xa2\xfa\x60\x34\x42\x3d\x72\x23\x94\xae\x6f\xcc\x26\x8c\x60\x87\x01\x4f\x80\x3d\x36\x4e\xbf\x43\x0f\x8f\xbf\x63\xce\xb4\xa9\xc1\x1f\x88\x9f\xb9\xb7\x4d\x67\x70\x73\x01\x5a\x59\xfe\x1d\x7b\x3b\x30\xa0\x67\x77\xe8\x0d\x02\xef\xe3\x05\xef\xf6\x22\xc1\xe5\xda\x77\xf1\x78\xaf\xb9\x56\x87\x9d\x1b\xfd\xae\x5b\x17\x97\xfb\xbe\x31\xae\x0e\x83\x95\xd9\x9a\xee\x68\x10\x5e\x7f\xfe\x7b\x89\x82\xff\x78\x3b\x39\x0e\x75\x14\x11\x20\x24\xf4\x15\x00\x00\xff\xff\x6c\x46\x62\xf3\x9b\x01\x00\x00")

func templatesCommandClassesTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCommandClassesTpl,
		"templates/command-classes.tpl",
	)
}

func templatesCommandClassesTpl() (*asset, error) {
	bytes, err := templatesCommandClassesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/command-classes.tpl", size: 411, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCommandStructFieldsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xc1\x8a\x83\x30\x18\x84\xef\x3e\xc5\x8f\x78\x5c\xf2\x00\x0b\x7b\x58\x17\x57\x96\x65\x3d\x64\xd3\x42\x4f\x12\xdb\xbf\x22\x44\xd3\x9a\x58\x90\x90\x77\x2f\x1a\x63\x91\xb6\x17\xa1\x17\x0d\x99\xcc\xff\x4d\x32\xc6\x54\x47\x20\x3f\x2a\x93\x9a\xa2\xc2\xf6\x82\x07\x6b\x03\x80\x71\x1f\xcf\x40\x58\x7f\x42\x08\xff\x19\xdd\x7c\xb1\x3c\xde\xb1\x24\x9c\x74\x26\x53\x99\xf1\x1a\x81\x0c\x5f\x6b\x41\xe9\xb6\xdb\x6b\x30\x01\xc0\xa0\xb7\xbc\x29\x11\xa2\xfc\x0d\x22\xd5\x15\x5b\x2e\xe0\xfd\x03\x48\x5c\xe9\xef\x0a\x85\x83\xb8\x83\x8f\x03\x78\xf5\x86\x19\x7d\x13\xab\xe8\x35\xce\x03\xb0\xf1\x96\xe5\xfa\x79\x02\xc1\xcb\x35\x01\x04\x2f\x3d\x5f\x4a\xb1\x92\x3f\x5e\x23\x69\xba\xfa\xd5\x4f\xe0\x6a\x42\xa1\x10\x16\x5d\xfe\x7d\xd2\xdf\x84\x86\xd6\x3a\x71\xf6\xdd\x15\x6a\x0c\x49\x51\xa7\x72\xb0\x4d\xa5\xbb\xd9\xfe\x7f\x0d\x00\x00\xff\xff\x53\xd1\xd0\xea\x3d\x02\x00\x00")

func templatesCommandStructFieldsTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCommandStructFieldsTpl,
		"templates/command-struct-fields.tpl",
	)
}

func templatesCommandStructFieldsTpl() (*asset, error) {
	bytes, err := templatesCommandStructFieldsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/command-struct-fields.tpl", size: 573, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCommandTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x61\x6f\xe2\x38\x10\xfd\x9e\x5f\x31\x42\xe8\x14\x9f\x20\xb9\xeb\x47\x74\xfd\xd0\x16\x4a\xd1\x6d\xa1\x2a\xb4\xab\x6e\x55\xad\xdc\x64\x08\x56\x13\x3b\x72\x4c\x11\x8a\xfc\xdf\x57\x76\x92\xe2\x04\x56\xdb\x7e\x03\xcf\x9b\xf7\x66\x5e\x9e\x1d\x86\xb0\xba\x99\x2d\xe1\x7a\xf6\x6d\x02\xb3\x25\x5c\x3c\xac\x16\xc3\xe9\x64\x3e\xb9\xbf\x58\x4d\xc6\x70\xf9\x04\x3f\xbe\x4f\x27\x73\x2f\x0c\x61\xbc\x80\xf9\x62\x05\xb7\x8b\xf1\xec\xfa\xc9\xf3\x72\x1a\xbd\xd1\x04\xa1\x2c\x83\x2b\x91\x65\x94\xc7\x57\x29\x2d\x8a\x60\x8a\xea\xae\x2a\xcd\x69\x86\x5a\x7b\x5e\x59\xf6\xdf\x51\x16\x4c\x70\x18\x9d\x43\x1b\xfd\x58\x15\xb4\x36\xa8\x42\xc9\x6d\xa4\x4c\x9b\x01\xfa\x0d\xd2\x50\x2e\x0f\xa5\x16\x01\x31\x02\x91\xe0\x85\x82\xfa\xb8\xc5\xa3\x35\x44\x51\xd3\x30\x1b\xc3\xb9\x33\x6e\xf0\x3f\xee\x4d\xf7\x7a\xcb\x23\x60\x9c\x29\x9f\x40\xe9\x01\x24\xe2\x35\xb8\xc7\x84\x15\x0a\xa5\xdf\x61\x2b\x35\xf1\xc0\x50\x7e\x00\x1c\xfa\x18\xb9\x62\x6b\x86\xd2\xb0\x00\xb8\x63\x8e\x9c\x31\xec\xc1\x6c\xec\x77\x8d\xb3\xe3\x90\x81\xdb\x3b\x6a\x4d\xef\x77\x67\xaf\xc1\xb5\x87\x23\x38\x18\xad\xb5\x29\xe9\x01\xcc\x71\xd7\x59\x81\x78\xcd\xce\xc7\x35\x9f\x38\x82\xd6\x0c\x89\x6a\x2b\x39\xfc\x75\xe4\x83\x61\x09\x43\x63\xe7\x0d\xa6\xb9\xd6\x9e\xda\xe7\x26\x0c\x6d\xf3\xab\x3f\x96\xa9\x2c\x25\xe5\x09\x42\xff\xe7\x00\xfa\x39\x95\x34\x73\xd3\x10\xdc\x99\x93\x42\x6b\xbb\x51\x59\x2a\xcc\xf2\x94\x2a\x84\x5e\x54\x01\x86\x15\xd5\x70\xcd\x30\x8d\x8b\x5e\x4d\x61\xf1\x65\x89\x3c\xae\x7f\x39\x1a\xef\x49\x4b\xe0\x91\x4a\x46\xb9\x9a\x4a\xb1\xcd\x0f\x3a\x2b\x31\x15\x36\x55\xfd\xf7\x24\xa8\x87\x7e\x7e\xe9\x6e\x7b\x0a\xe6\x08\xdb\x8c\x7f\x45\xf9\x94\x57\x8e\x48\x70\xec\xde\x6f\xfd\x6b\xf9\xf6\x55\xe7\x5c\xef\xcc\x0d\xac\x7e\x57\xe9\xf0\xa3\x2c\xee\xce\x48\xa0\x93\x61\x72\x9c\x6b\x37\x36\x27\x23\xee\x7d\x4a\xa1\x43\xde\xe6\x3d\x7d\xd5\x3f\x4b\xbc\x54\x92\xf1\xc4\x27\xc6\x5f\xc6\x13\x97\xb8\xe7\x5c\xb1\xaa\xaf\xd7\x66\xfd\xfb\x88\xf6\x81\x67\x54\x16\x1b\x9a\x5e\x32\x4e\xe5\xde\x8f\xa9\xa2\xf0\xfc\xf2\xba\x57\x48\x00\xa5\x14\xd2\x0a\x84\x21\x5c\x44\x91\x90\xb1\x51\x54\x02\xd4\x06\x21\x16\x51\x31\x80\x1d\x42\xb6\x2d\x14\x44\x22\xdf\x83\xed\x66\x6b\x73\xb8\x63\xc5\xc6\x20\x25\x2a\xca\x38\x30\x05\x74\xad\x50\xd6\xa3\x32\x9e\xd8\x04\xb2\xf5\xc9\x3b\x94\xd3\x7d\x2a\x68\x6c\x22\x92\xd1\x37\xf4\xab\x81\x06\x90\x22\xb7\x13\x12\xfb\x8e\x89\x7c\xef\xd7\xc8\x81\x95\x26\x9e\x07\x46\xde\xc0\xea\x02\x81\xff\xe0\xac\xce\x60\xed\x92\xdd\xaa\x08\xe6\xb8\xf3\x7b\x77\xb5\x50\x8a\x3c\x51\x1b\xd8\xf2\x18\xe5\x3a\x15\xbb\x1e\xb1\x99\xf2\xda\x91\xdc\x36\x66\x0d\x9b\x70\xda\x30\x16\xbd\x8f\x25\x74\xdd\xd3\xc4\xb2\x96\xe4\x2c\xfd\xd3\x87\xb8\x6d\x7d\x06\x02\xcd\x02\xd0\xec\x8e\x52\x56\xa3\x57\xef\x7c\x53\xee\x38\x74\x46\x0e\xb5\xe7\x7f\x5e\xe0\x1c\xcc\xb9\xd1\xec\x3e\xe0\xc4\x45\xfe\x7b\x0a\xd9\x80\x5c\x0b\x3e\x61\x40\xb3\xb5\xa7\xbd\x5f\x01\x00\x00\xff\xff\x68\xaa\xd8\x5b\xa0\x07\x00\x00")

func templatesCommandTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCommandTpl,
		"templates/command.tpl",
	)
}

func templatesCommandTpl() (*asset, error) {
	bytes, err := templatesCommandTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/command.tpl", size: 1952, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDevicesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x5d\x8f\x9a\x40\x14\x7d\x76\x7e\xc5\x09\xc9\x26\x90\x52\xf4\x79\x1b\x1f\x76\xa3\xeb\x9a\xb6\x98\x54\x36\xed\xae\xf1\x01\x71\x20\x44\x05\x02\xa3\x5d\x33\x99\xff\xde\x0c\x7e\x14\x64\x06\xf7\xe3\x05\x1d\x4e\xee\x3d\xf7\x9c\x33\xdc\x6e\x17\xde\xe3\x78\x8a\x87\xf1\x8f\x21\xc6\x53\xdc\x3d\x79\x93\xaf\xa3\xa1\x3b\xfc\x75\xe7\x0d\x07\xb8\x7f\xc6\xcb\xef\xd1\xd0\x25\xdd\x2e\x06\x13\xb8\x13\x0f\x3f\x27\x83\xf1\xc3\x33\x21\x99\x1f\xac\xfc\x88\x22\x08\x08\x89\x37\x59\x9a\x33\x18\xe1\x86\x19\x84\xb0\x7d\x46\x71\xef\x17\x71\x30\xa0\xbb\x38\xa0\x9e\x3c\x2f\xf6\x8c\x12\x12\x6e\x93\x00\xe6\xe2\x12\xb5\x30\x65\x79\x9c\x44\xa6\x85\xa2\xfc\x03\x4e\x80\x38\xc4\xce\x5f\xdb\x48\x57\xb8\xed\x5f\x96\xb8\xfe\x86\x16\xb3\xc5\xfc\x9b\x84\x39\xe9\x74\x72\xca\xb6\x79\x22\x2b\xf0\x05\xe1\x86\x39\xd3\x2c\x8f\x13\x16\x9a\x06\xcc\xde\xeb\xcd\x1f\xcb\xb0\xcb\x21\xcc\x85\x65\x91\x8e\x00\x5d\x17\xb4\x5a\x68\x3c\x25\xab\x24\xfd\x9b\x18\x6f\x2a\x27\xe2\xa8\x73\x44\x13\x9a\x6b\x95\x46\x4d\x5c\xa5\xb5\x53\x97\xda\xa8\x39\x88\x8d\x3e\x20\x36\xfa\x9c\xd8\xa8\x2e\x76\x9a\xd1\x20\x0e\x15\x6a\x4b\xb4\xf2\xb6\x60\xf9\x36\x60\x65\x8a\x65\x6e\x9e\xe2\x4a\x10\x9c\x84\x7a\x4a\x23\x09\xce\x7c\x9e\x9a\x5c\xce\x55\xfa\x1c\x51\xd6\x44\xa5\x69\x66\xd4\xc6\x60\xa3\x68\x27\xd0\x47\xa4\xa6\x2b\x66\x15\xbe\xf9\xac\xda\xfd\x03\xd9\x55\xcb\x3f\x17\x63\xa3\xd3\xd9\x39\x73\x89\x6b\x9f\xe1\x91\xab\xd6\xff\xa6\x40\x17\xc7\x87\x61\x63\xe9\x9c\x53\x96\x87\x4a\xac\xf2\xd8\xf4\xea\x44\x63\x69\xe7\xd0\x96\x28\x26\xd3\xa7\xaf\x1d\xa5\x64\x91\xe4\x41\x9a\x14\x0c\x26\x01\x38\xcf\xfd\x24\xa2\x70\x2a\xd7\xb4\x10\xa2\x44\xbc\x74\x94\xca\x86\x70\xe4\x53\x88\xc6\x76\xeb\x83\x73\xe7\x3b\xdd\x0b\xc1\x39\x4d\x96\x42\x10\x8b\x90\x9d\x9f\x2b\xb7\x16\x36\x7e\x36\xbb\x00\xe6\x47\x59\xfd\x16\x90\xbf\x73\xca\x5b\x18\x9c\x3b\x8f\x74\x9d\x09\x61\xd8\xa7\xc1\xd4\xa2\x6b\xdf\x86\x56\x76\x73\xd9\x69\x85\xab\x77\x58\xa9\xae\x01\xd5\xc5\xeb\x60\xfe\xee\x79\xdf\x60\x40\xf5\x42\xb8\x29\x7b\x2a\xe8\x52\xb5\xe5\xfa\xe8\xbd\xf6\x7a\x6d\x03\x9c\x81\x7a\x75\x89\xc4\x21\xdc\x94\xbd\xd0\x3c\xbd\xdf\x33\x8a\x83\x5f\x6a\x87\x95\xdc\x17\x16\xd7\x7f\x4e\x86\x6b\x36\x92\xc6\x52\xf9\xb6\x59\x71\x2d\x88\xd6\xaa\xd6\x7c\x54\xe1\x5c\xed\x56\xe9\xa7\x70\xb5\x3d\xed\x63\xf9\xc1\x22\x40\xd8\xe4\xff\x51\x90\x7f\x01\x00\x00\xff\xff\x98\x66\xe5\x5c\xf7\x08\x00\x00")

func templatesDevicesTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDevicesTpl,
		"templates/devices.tpl",
	)
}

func templatesDevicesTpl() (*asset, error) {
	bytes, err := templatesDevicesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/devices.tpl", size: 2295, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMarshalCommandParamTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xdd\x4e\xdb\x4c\x10\xbd\xe7\x29\xe6\xb3\x3e\x45\x89\x44\x17\x48\xa1\x17\x94\x20\x39\x90\x56\x11\x10\x90\x31\x54\x08\x51\xb4\xc6\xb3\xc9\x0a\x7b\xed\xae\xd7\xa1\x91\xeb\x77\xaf\xd6\x7f\x31\x21\x4e\x00\xa9\xed\x4d\x14\xc7\x33\x67\xcf\x9c\x99\x39\x9b\x24\xe1\x0c\xf0\x07\x10\x7b\x16\x22\x18\xd7\xa6\x35\x34\x47\xb6\x91\xa6\x1b\x00\x00\xe5\xdb\x36\x17\x2e\xfe\x04\x72\x4d\x25\xa7\x42\xc1\x76\x87\x5c\x50\x49\xfd\x73\xc6\x22\x54\xd0\xdd\xdb\x2b\x12\x74\x8a\x42\x3f\xf4\xa8\x42\x30\x7c\x2a\xa3\x09\xf5\x3e\x4c\xf3\x34\x03\x48\x85\x8b\x5e\x84\x55\x0e\x67\xf0\xe0\xbb\x24\x49\xec\xe0\x6b\x30\xa2\x3e\x02\xd1\x9f\x69\x0a\xff\xf5\x40\x70\x0f\x5a\x2d\xf0\x50\xb4\x97\x07\x75\xe0\x10\xb6\x21\x29\xb0\x00\x42\x3a\xf3\x02\xea\x42\x0f\x68\x18\xa2\x70\xdb\xc5\x0f\x9b\x0d\x87\x10\x42\x3a\x45\x72\xc5\x4e\xb8\x19\xb9\x9c\x27\x3c\x93\xe8\xd2\xb6\xae\x8e\xec\xfb\xfe\x8d\x3d\x98\xcb\xf4\xbf\xd0\x80\xfb\x3d\x58\x04\xcf\xdf\x17\xf0\x53\x2a\x61\x4a\x3d\x70\x66\x0a\x2b\xb9\x24\x15\x63\x04\xd2\xe7\xea\x0b\x47\xcf\xad\x44\x29\xd4\x27\xc3\x68\x14\x28\x0b\x23\x94\x53\xac\xbf\x85\x0c\xea\x57\x0f\x0a\x59\x32\x0a\x69\xfa\xac\xc0\x0c\x31\x27\x92\x24\x4f\x5c\x4d\x80\x5c\x4e\x38\x53\x28\xd3\xf4\xe0\x40\xd3\x68\x27\x09\x49\xd3\x4e\x51\x72\xa7\x8c\xca\x12\xcf\x68\xf4\x98\xa6\xad\x97\x61\x35\x86\xf5\xe7\xc5\xa7\xa2\xb2\x0c\x6b\x20\x62\xbf\x96\xf8\xaf\xa9\x37\x50\xd5\x4d\xf0\xe8\xf8\x0d\x3d\xa8\x46\x77\x69\x0d\x1e\x1d\x17\x83\x9c\xd4\x72\xaa\xf2\x4b\x7a\x3a\x2e\x67\xdc\x81\xad\x2d\x60\x1e\x0f\xc1\xe1\x2a\x82\x40\xd4\xd2\x52\xc8\x86\xf1\x25\x52\xab\x07\xdf\xd7\x43\x31\x56\xc7\x7a\x55\x0b\x9b\x37\x69\x4a\xbd\x7c\x67\x9a\xb6\xc4\xb4\x2c\xf3\xa6\xdc\x0f\xce\x20\xd4\x76\x71\x8a\x42\xef\xc8\x8a\x55\xfe\x3c\x0f\x3c\x84\x24\x29\x7d\xc7\x94\x92\xce\x4c\xa5\x24\x77\xb4\xf7\x9c\xa2\x18\xab\x49\x4d\x55\x89\x2a\x96\x42\x5b\xc5\x26\xa0\x94\x81\x8c\xc8\x08\x9f\xda\x46\x1e\x08\xc1\x14\x25\xf3\x82\x27\xe0\x02\xa8\x86\xca\x4f\x41\x85\x12\x5e\x92\x30\xe6\x95\x15\xfd\x6f\xa0\x31\x8c\xcc\xe8\x81\xf3\x57\xc8\x75\x7b\x97\xf5\xa7\xa1\xe8\xca\x80\x16\x6c\xf1\xdd\x46\xb6\xda\xc0\xfa\x43\xfb\xcc\xbc\x3c\x29\x9b\xf3\xce\x53\x96\x21\x1f\x7f\x3b\xb7\x8e\x8d\x05\xd3\x73\x62\xa6\x9b\xee\xd3\x47\x6c\xe7\x3a\x6c\xc2\x6e\x69\xb8\x0e\x17\x54\xce\x48\x9f\x8f\x07\xc2\xe5\x54\x90\x8b\x58\x5d\x71\xa1\x3e\x76\xdb\x4e\xcc\x9a\x28\x74\xd6\x0a\xe4\xc4\xac\x52\x63\x85\x0e\xf7\xdd\xdd\xbf\x48\x97\x33\x8d\x7e\xbb\x7d\xa7\xaf\xb5\xfa\x8d\xd5\x34\xbe\x39\x43\xbd\x6c\x31\x56\x43\x6c\x3c\xbf\xac\xd6\xa8\x70\xbb\xb3\xbf\x7b\xb7\x56\x8a\xd7\xf6\xad\xbb\x4e\x88\x9d\x4f\x7f\xbe\x6f\x67\xa6\x75\x32\xb0\xd6\x8f\xef\xdc\x3e\x8e\x02\x11\x65\x7f\x5a\x16\xdc\xd1\xa7\xf2\x11\xe5\xc6\xc2\xe2\xad\xb2\xfc\xb7\x2e\xcb\x92\x7d\xd4\xdf\x7e\x07\x00\x00\xff\xff\x97\x25\xc5\xa7\x76\x09\x00\x00")

func templatesMarshalCommandParamTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMarshalCommandParamTpl,
		"templates/marshal-command-param.tpl",
	)
}

func templatesMarshalCommandParamTpl() (*asset, error) {
	bytes, err := templatesMarshalCommandParamTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/marshal-command-param.tpl", size: 2422, mode: os.FileMode(436), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMarshalCommandParamsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x3d\x8a\xc3\x30\x10\x85\x7b\x9f\x62\x10\xdb\xda\x07\x58\xd8\x76\xb7\xd8\x22\x29\x42\xfa\x21\x7a\x51\x4c\x24\xc7\x91\x84\xc1\x18\xdd\x3d\x68\x24\x9c\xc4\x55\xaa\x81\xf7\xf7\xc1\x2c\x0b\x7d\x5d\x31\x07\xfa\xfe\xa1\x6e\xe7\x35\x3c\xf4\x3f\xe6\x90\x52\x93\xad\xd3\xcd\x39\x1e\xb4\xb8\x45\xf2\x3c\x18\x48\x27\x8b\xd2\x4d\xa9\x21\xca\xe9\x38\x8f\x10\xb5\xd6\xba\x3f\xc4\xdf\x1e\x56\x1f\xb2\x91\xb3\x35\xda\x52\x7f\x26\xdc\x6b\x43\x8d\xec\xd9\x29\xf1\xca\x90\x08\xdb\xa5\xbd\x88\x42\x5e\xa3\x11\x6e\xb4\x1c\x41\xca\xb1\x0f\x17\xb6\x6d\x2d\xb4\x65\xb3\x4e\xad\x58\xd8\x80\x77\xf6\x64\x5e\xc1\x93\xd9\x52\x8f\xe6\x63\xe4\x64\x0a\x35\xa8\x3c\xf4\x64\x0e\x5a\x5e\x27\xf7\x11\x00\x00\xff\xff\xaf\x0c\xff\xa9\x70\x01\x00\x00")

func templatesMarshalCommandParamsTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMarshalCommandParamsTpl,
		"templates/marshal-command-params.tpl",
	)
}

func templatesMarshalCommandParamsTpl() (*asset, error) {
	bytes, err := templatesMarshalCommandParamsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/marshal-command-params.tpl", size: 368, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMarshalCommandVgParamsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x6d\x4f\xdb\x30\x10\xfe\xbe\x5f\x71\xab\x50\xd5\x4a\x9d\x81\x0e\xf6\x81\x51\xa4\x14\xba\xa9\x02\x0a\x0a\x85\x09\x21\x56\x39\xf4\xdc\x5a\xa4\x4e\xe7\x38\x61\x55\x96\xff\x3e\x39\x49\x59\xf3\x4a\x04\x93\x36\x3e\xa0\xd8\x7a\x7c\x77\xcf\x73\x2f\x76\x99\x23\x61\xd2\x01\x7f\x06\x07\x3d\x90\x54\xcc\x10\x1e\x16\x53\x12\x04\x30\x76\xbe\x3a\x23\xba\x40\x20\xfa\x7f\x18\x42\xf0\x0e\x00\x20\x08\x12\xd8\xd6\xa4\x03\x5b\x4b\x2a\xe9\x42\x1f\x25\x97\xfa\xcb\x0d\xc3\x08\x14\x03\x39\x03\xfc\x91\x60\xc8\x78\xb5\x44\x68\xdc\x18\xe6\xd0\x18\x8d\x1b\x1b\xb8\x4d\x6c\x8b\x8b\x29\xfe\x5c\x1f\xb9\xa1\x92\x53\xa1\x60\xa7\x1d\x5b\xbf\x60\xcc\x45\x05\xdd\xfd\xfd\xcc\xf1\xd8\x84\xc2\xc5\xd2\xa6\x0a\xa1\xb1\xa0\xd2\x9d\x53\xfb\x83\x1f\x1b\x68\x24\x06\x73\x4e\xd1\x76\xb1\xc0\x14\x67\xe0\xcf\x48\x10\x3c\x2b\x90\xc4\x93\xe8\xf0\xbe\x07\x82\xdb\xd0\x6c\x82\x8d\xa2\x55\x81\x6c\xc3\x11\xec\x24\xb2\x65\xff\x96\x74\x65\x3b\x74\x0a\x3d\xa0\xcb\x25\x8a\x69\x2b\xd9\xe8\x54\xb9\x26\x84\xb4\x73\xd6\x72\xa4\xc4\x34\x95\x05\x4d\x12\x0a\x52\x71\x35\x36\xaf\x8f\xc7\x93\xfe\xed\x78\x90\x4f\xc7\x96\xd0\xce\x0f\x7a\x50\x1c\x48\x1a\x9d\x5a\xf9\x54\x82\x4f\x6d\xb0\x56\x0a\x33\x46\x37\xea\xc6\x62\xda\x78\x62\xb3\xcf\xd5\x17\x8e\xf6\xb4\x30\xab\x9c\x69\x34\x19\xba\x23\x47\x99\xe8\xa2\xf4\xb1\x08\xa8\x5d\xfe\xea\x41\x9c\x8e\x28\xfa\x30\x4c\xe9\x68\x31\x12\x39\x89\x09\x04\xc1\x13\x57\xf3\x68\xf7\x6a\xce\x99\x42\x19\x86\x87\x87\x3a\xe6\x56\x10\x90\x30\x6c\x27\x3a\xb6\x37\x80\xd1\xf1\x73\xea\x3e\x86\x61\x33\x8f\x2c\x08\x3d\xbf\x5f\xbc\xb7\xa1\x0b\xc3\x0d\x5d\x22\x87\x03\xe1\x65\x0b\xb7\x16\x5f\x86\x45\x7c\x19\xd6\xe4\xbb\x3e\x5e\x8f\xef\x8b\xbc\x72\xf9\xb6\xe9\xec\x2d\xe9\x5e\xb7\x68\x59\xa6\x6d\x3a\x4b\x4d\xad\x12\xf9\x12\x5a\xeb\x23\x31\xd9\x36\x6c\x6f\x03\xb3\xf9\x12\x2c\xae\x5c\x70\x44\xbe\xe5\x20\x6a\xaa\x72\xd3\xcd\x1e\x7c\xaf\x65\x9b\xb1\x17\xfa\xb9\x5c\xdd\xfc\x5e\xc5\x4c\xa1\x76\x7a\x70\xd4\x19\x10\x86\x69\x1a\xb7\xd9\xd1\xc0\x19\x44\x98\x33\x14\x3a\xa3\x2f\x4d\xc0\xcf\x7f\xd0\x47\x10\x04\xe9\xf9\x6e\x48\x49\x57\x86\x52\x92\x5b\x7a\xc6\x9f\xa1\x98\xa9\x79\x2e\x65\x12\x95\x27\x85\x1e\xb9\x1d\x40\x29\x1d\xe9\x92\x11\x3e\xb5\x1a\x31\x1c\x1c\x1f\x25\xb3\x9d\x27\xe0\x02\xa8\x36\x18\x7b\x44\x85\x12\xca\xc2\x6a\x94\x89\x01\xeb\x1a\xac\x0c\x74\xe8\x1a\xee\x03\xe7\xb5\xd5\xbf\xbb\x8f\x6a\xa1\x4a\xa7\xdc\x64\x2f\xbc\x9c\xfe\xce\xa5\x51\xff\x8a\xe8\x0f\xc7\xe7\xc6\xd5\x69\xb6\x06\xde\x1e\x46\xb9\xcb\x93\x6f\x17\xe6\x49\xee\x3e\x4a\xad\x2c\x2f\x1a\x26\x0b\xfa\x88\xad\x58\xda\x0e\xec\xa5\x29\x5a\x5c\x50\xb9\x22\x7d\x3e\x1b\x88\x29\xa7\x82\x5c\x7a\xea\x9a\x0b\xf5\xb1\xdb\xb2\x3c\x56\x19\x67\xbb\x26\x55\xcb\x63\x39\x65\x6b\x6a\x3a\xe9\xee\xfd\x3f\x0c\x39\xd3\xee\xee\x76\xee\xf5\xbb\xa6\xe8\xb5\x52\xd6\x7f\x31\x11\x3d\x5a\x3c\x7c\xee\xc2\xca\xce\xaa\x14\xf3\x6e\xf7\x60\xef\xfe\x55\x8a\xbe\xae\x62\xba\xf5\xf4\xdc\xfd\xf4\xef\x2b\xa6\xe0\x85\xf6\xaa\x16\xac\xd3\x7f\xe7\x86\x79\x3a\x30\xeb\xbb\xcb\xce\xf4\x63\x47\xb8\xd1\x8b\x3d\x73\xe7\x2d\xa8\x7c\x44\x99\x09\xa0\xe8\x57\x40\x62\xa7\xea\x01\xf0\x46\xf2\x50\x3c\x03\x9f\xd7\xeb\xef\xf0\x77\x00\x00\x00\xff\xff\xe0\x6f\x27\xa1\x1c\x0d\x00\x00")

func templatesMarshalCommandVgParamsTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMarshalCommandVgParamsTpl,
		"templates/marshal-command-vg-params.tpl",
	)
}

func templatesMarshalCommandVgParamsTpl() (*asset, error) {
	bytes, err := templatesMarshalCommandVgParamsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/marshal-command-vg-params.tpl", size: 3356, mode: os.FileMode(436), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMarshalVariantTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x31\xab\xc2\x40\x0c\xc7\xf7\xfb\x14\xff\x07\x8f\xd2\xc2\xe3\xe8\xfc\xa0\x4e\x82\x93\x4e\xd2\x3d\x78\x29\x04\xaf\xd7\x52\xab\x28\x21\xdf\x5d\x0e\x2a\x2e\xea\xe0\x92\xe1\xcf\x2f\xf9\x25\x51\xfd\xbd\xd0\x24\x94\x66\xfc\x37\x28\x25\x05\xbe\xc2\xb7\x4b\x54\x57\x66\xaa\xd2\xe1\x01\xf9\x2d\x4d\x47\x9e\xd6\x1c\xa5\x97\x99\x83\x99\x53\x07\x48\x87\x43\x1f\xbc\xea\x7e\xd8\x0c\x3b\xea\x19\x3e\x57\x33\xfc\x34\x48\x12\x51\x14\x88\x9c\xca\xd7\x50\x85\x15\x6a\xe4\x39\xc0\x48\xb7\x38\x50\x40\x03\x1a\x47\x4e\xa1\x5c\x82\xbf\x37\x02\xef\x7d\xe5\x00\x73\x9f\x5a\x9f\x47\x2e\xfb\xb7\x14\xcf\x59\xec\xcc\xa9\x72\x3c\xb1\x99\xfb\xca\xac\xca\x29\x3f\xe1\x1e\x00\x00\xff\xff\xf7\x6c\x96\xb2\x47\x01\x00\x00")

func templatesMarshalVariantTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMarshalVariantTpl,
		"templates/marshal-variant.tpl",
	)
}

func templatesMarshalVariantTpl() (*asset, error) {
	bytes, err := templatesMarshalVariantTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/marshal-variant.tpl", size: 327, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUnmarshalCommandParamTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\xdf\x6b\xdb\x30\x10\xc7\xdf\xfb\x57\x1c\x66\x94\x86\x30\x75\x4d\xc2\x1e\xca\x5c\x70\xd6\x6c\x84\x2e\x19\x38\xee\x46\x19\xa1\x28\xf1\xd9\x39\xaa\xc8\x99\xa4\xb4\x0b\x42\xff\xfb\x88\xe3\xfc\x70\xa8\x49\xc7\x08\xed\x8b\x91\x7d\xa7\xbb\xcf\xf7\x4e\x3a\x5b\x4b\x09\xe0\x6f\x60\xd1\x62\x86\xe0\xfd\x08\xc2\x6e\xd0\x8f\x3c\xe7\x4e\x00\x00\xac\x35\x38\x9d\x09\x6e\x10\xbc\xb9\x9c\x72\xa5\x27\x5c\xbc\x7f\xe4\x8a\xb8\x34\x1e\xb0\xdc\xcd\x5a\x14\x1a\xa1\x14\x67\x10\x85\xb7\x9f\xa3\xfb\xf6\x5d\xd4\xf1\x9c\xb3\xf6\x9d\xe4\x53\x84\x4b\x1f\xa2\xec\x6b\xd6\x5f\xae\xd9\xf2\x59\xa4\xa1\x04\x04\xca\xb3\x19\x5f\x88\x8c\xc7\x35\xf8\xe4\x03\x81\xcd\x4d\x00\x0a\xcd\x5c\x49\x40\xa5\x32\xa5\x59\x1f\x9f\xce\x3c\x2d\x68\x8c\x40\x32\xc6\x3f\x90\xcd\x0d\x64\x09\x8c\xb2\xb9\x8c\xb5\x57\xcb\x37\xb9\x93\x82\x5e\x71\x99\x22\xb0\x36\x99\x2f\x84\x22\x2e\xd2\x2d\x2d\x94\x00\xeb\xea\x7e\x66\x42\xd4\xa8\x1e\x71\x6b\x03\x18\x4f\x63\x56\x20\x3b\xc7\xac\xdd\x32\xe7\x51\x56\xe0\xe0\xc3\x1a\xf8\x17\x0d\xad\x7d\x22\x33\x29\x1c\x7a\x5c\x3f\x38\x77\x6a\x2d\x5b\x4a\x47\x19\x3b\x57\x5b\x3b\x0c\x26\x94\x18\x54\xce\x5d\x5d\xed\xda\x37\x5c\xdb\xb7\xf2\xba\x50\x92\xc7\xef\xc8\xf9\x74\xb3\xe5\xb5\x60\x9f\xc5\x5b\x16\x5a\xf0\xf4\xff\xeb\x2c\x78\xba\x21\xdf\x82\xc3\x29\x58\x9b\x1b\x57\xd4\xe0\xfb\xe5\x0f\x07\xca\x48\x50\xf7\xe1\xa2\xe2\xc8\x06\x61\x18\xdc\x79\xc7\x3e\x91\x94\xc0\xd9\xca\x8d\x05\x4a\xf1\x45\x60\x8c\xa2\x11\x7c\xa8\xb1\xae\x0e\xf4\x98\x68\xaf\xb1\xfb\xf7\x05\x7c\xd0\x46\x91\x4c\xb7\xfd\xbc\xa4\xba\xb5\x15\x41\xbf\xa1\x4c\xcd\xc4\xb9\x61\x6d\x5d\x0c\xa1\xf1\x70\x8a\x7f\x8b\xfd\x7c\x9d\x0f\xee\xab\xe8\x43\xbb\x1b\xf5\x82\xc1\xcd\x91\x3b\xf1\x02\xe9\xc3\x0a\xc0\xeb\x9f\xdf\xc3\xeb\xd7\xc2\x1b\x91\xe4\x6a\xc1\xda\x94\x76\x64\x4c\x5c\xb2\x5b\x92\xa6\xd9\x28\x9d\x86\x56\xd1\xed\xbc\x0d\xad\xea\x32\xdf\x37\x5a\x6f\x59\x46\x73\x57\x46\xb3\x42\xc6\x9b\xeb\xc5\xc5\xc7\x92\x88\xc6\xae\x88\x46\x85\x88\x5e\x10\xde\x74\xc2\x23\xcb\x58\x0d\x3f\x38\x3f\x07\xfd\x40\xb3\x19\xc9\x14\x56\x79\x5f\x9c\x54\x92\x28\x02\xee\x4d\x92\x63\x4e\xcb\x8a\xbf\xc7\xe1\xfb\x3b\x2c\x3c\xa9\x5e\xdf\x1b\x50\xc5\xea\x6f\x00\x00\x00\xff\xff\xf7\xa1\x32\xd5\xfb\x08\x00\x00")

func templatesUnmarshalCommandParamTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUnmarshalCommandParamTpl,
		"templates/unmarshal-command-param.tpl",
	)
}

func templatesUnmarshalCommandParamTpl() (*asset, error) {
	bytes, err := templatesUnmarshalCommandParamTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/unmarshal-command-param.tpl", size: 2299, mode: os.FileMode(436), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUnmarshalCommandParamsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6b\x1b\x31\x14\xbc\xe7\x57\x3c\x96\x40\x9d\xe0\x6c\xa0\xc7\xd0\x9c\x02\x31\xc5\xa6\x2d\xd4\xf8\x5a\x84\xf5\xac\x15\xdd\x95\xb6\xd2\xdb\x35\x8b\xd0\x7f\x2f\xfa\xf0\x5a\xb6\xdb\xd2\x8b\x3f\xde\xcc\x9b\x19\x8d\xe4\xdc\x51\x52\x03\xb5\xf7\x12\x5e\x5e\xe1\xa3\x73\xa8\xb8\xf7\xce\x3d\x3f\x42\xc2\xbc\x87\x06\x0d\x02\x2a\x3b\x18\xb4\x70\x44\xe0\x5a\x7d\x20\xe8\x8d\x54\x04\xd4\x48\x0b\xf2\x00\x14\x49\xcc\x20\x28\x0d\x3d\x33\xac\xb3\xf0\xf8\xec\xfd\x9d\x73\x70\xff\x13\x27\x1b\xe4\xeb\xaf\x86\xa3\x41\xbe\xc6\xc9\x66\x68\xaf\xbb\x8e\x29\x1e\xd1\x34\x32\x4c\x09\x8c\x3b\x61\x18\x77\xbd\xbf\x03\x08\x6c\x9a\x7a\x8c\xd3\xbc\x56\xaf\x90\xde\x25\xb6\x7c\x1b\x80\xc0\xcd\x54\x79\x00\xfc\x95\xf9\x55\x8c\x53\x45\x24\xc9\xc4\xc1\xb5\xce\xb7\x38\x8c\xbe\x33\x95\xb0\xeb\x5b\x46\x08\xd5\xa0\x3a\x66\x6c\xc3\xda\xa7\xbc\xf2\x94\x54\xb3\x58\xb6\xc5\xd6\x22\x5c\x78\x8f\xa2\x34\x1e\xc5\xb5\xeb\x4e\x5c\x59\xc2\xbd\xb4\x1b\x66\x29\x10\x3f\xc7\x5f\x6b\x9c\x12\xe7\xdc\x45\x71\xc4\xcc\x26\x33\x60\x86\x00\x0e\xda\x80\x84\x4f\xd0\xa2\x5a\xf4\x6c\x6a\x35\xe3\x0f\xe0\xf2\x5e\xc8\x78\xc3\x94\x8a\x16\xfb\x8e\xd7\xce\xcd\xe1\xde\xa5\xe2\x3b\xb1\x41\x25\xa8\xd9\x31\x73\x11\xa1\x50\x0b\xcf\xe5\x3f\xda\x1a\x45\x2a\xcc\x56\xa1\x85\x79\x65\xab\x57\xfa\x0b\xeb\x70\xa3\x8f\x68\x02\x52\x87\x7f\xde\x87\xd3\x17\x59\x56\x48\xdf\xc9\x0c\x7b\x0a\xe8\xb9\xbf\xb7\xb7\xf0\x54\x4f\x1a\xe5\xba\xcb\xe7\x73\x2e\x3f\xa7\x1f\xcb\xf2\xda\x47\x51\xc7\xeb\xb6\x73\x11\x65\x98\xcc\xcc\x5a\x2f\xb7\x31\x4b\x78\x39\x3b\x9d\xab\x48\x9f\xa9\xcf\x3f\xa5\x7b\x05\xd6\xf7\xa8\xf8\xe2\xaf\x94\xe5\x3f\xba\x79\x98\x3d\x4e\x9e\xa7\xef\xdf\x01\x00\x00\xff\xff\x56\xe1\x18\xc9\xce\x03\x00\x00")

func templatesUnmarshalCommandParamsTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUnmarshalCommandParamsTpl,
		"templates/unmarshal-command-params.tpl",
	)
}

func templatesUnmarshalCommandParamsTpl() (*asset, error) {
	bytes, err := templatesUnmarshalCommandParamsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/unmarshal-command-params.tpl", size: 974, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUnmarshalCommandVgParamsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x61\x4f\xdb\x3c\x10\xc7\xdf\xf3\x29\x4e\x51\x85\xa8\xfa\x3c\x61\x14\xb4\x17\x68\x45\x4a\x47\x37\x55\x40\x37\x85\xb0\x09\x4d\x15\x72\xe9\x25\x3d\x91\x3a\x99\xed\xc2\x2a\xcb\xdf\x7d\x4a\x93\xa6\x49\x8b\x92\x82\xb4\x6e\xf4\x4d\x2f\xf1\xdf\xbe\xfb\xfd\xcf\xb1\xb5\x06\xc1\x78\x80\xd0\xb8\xfb\x0f\x1a\x31\x13\x6c\x0a\xa7\x1d\xb0\xbf\x26\x91\x34\x66\x0f\x00\x40\x6b\xf2\x01\x7f\x66\xe3\xb6\x37\x8f\x11\xac\x6f\x8e\xdb\x77\x06\x9e\x95\x69\x52\x9d\xc2\x69\x1c\x32\x85\x60\xcd\xf8\x94\x09\x39\x61\xe1\xff\x8f\x4c\x10\xe3\xca\x02\x3b\x5f\x0e\x43\x89\xf0\xcc\x9a\xd7\x9e\x7b\xf3\xd1\xbb\xeb\xde\x7a\x3d\xcb\x18\xad\x1b\x9c\x4d\x31\xa9\xc7\x8b\x3e\x47\x83\x24\xce\xe4\x49\x5c\x48\x4c\x3e\x84\xc8\x0f\x62\x36\x0f\x23\x36\x6e\xc2\x87\x0e\x10\xe8\x7c\x38\xf9\x09\x54\x33\xc1\x01\x85\x88\x84\xb4\x07\xf8\x74\x60\xc9\x90\xee\x11\x88\x8f\xf1\x17\x44\x33\x05\x91\x0f\xa3\x68\xc6\xc7\xd2\x6a\xe6\x53\xcd\x5e\x1e\x3e\x32\x01\x5a\x2f\x2b\xb9\x8c\x9e\x50\x94\xcb\x81\xac\xe0\x92\x23\x05\x77\x47\x7e\x82\x92\x4d\xe9\x92\xfa\x44\x18\x8e\x0b\xe2\xdc\xea\xc6\xc8\xb7\xfb\x72\x10\x29\x17\x25\x8a\x47\x5c\x17\xa5\xc2\x8a\x4a\xec\xd5\xe8\x62\xb1\x45\xa6\xac\xc8\x0e\x2c\x7d\xfa\x41\x43\xad\x9f\x48\x4d\x56\x9a\x2b\x26\x1f\x8c\xd9\xd7\xda\x4e\xec\x47\x3e\x36\xa6\x59\xd0\x5c\x4f\xc8\x57\x28\x8c\x39\x3b\x2b\x4a\xd6\x08\xca\xef\x36\x9f\x0b\x96\xf8\x58\xb0\x64\x51\x41\x8f\xcf\xa6\x1b\x2b\x6e\x8b\xea\x63\x3d\xea\x52\x53\x85\xea\x63\x2d\x6a\x25\xd6\x46\xa7\x43\x16\xec\xa6\xd1\x21\x0b\x72\xf8\x15\x3b\xec\x27\x7b\x33\x1b\x4f\xc1\xa1\xd3\xd9\x78\xf7\xa2\x3e\x12\xb4\x3a\x70\x54\xf3\x41\x3b\xae\xeb\xdc\x5a\xbb\xfe\x52\x17\xde\x1e\xa4\xf2\xac\x1c\x47\x08\x36\x77\x94\x12\x34\x82\x77\x4d\xbb\x2f\x1d\x79\x4f\xf4\x92\x8d\x96\x74\x54\x2a\x41\x3c\x58\x6d\xaa\x53\x6a\x69\x5d\x99\xe8\x12\x79\xa0\x26\xc6\x0c\x9b\x45\x23\x43\x89\x2f\x4d\xfd\x9a\x9c\xd5\xbd\xdb\x72\x95\x9a\x0e\x77\xfb\xde\x95\x73\x7d\xf1\x17\x7a\xbc\xb5\x61\xc3\x1a\x84\xf3\xef\x5f\xdc\xf3\x7f\x0f\x60\x44\x9c\x89\xb9\xdd\xa5\xa0\xc7\xc7\xc4\xb8\x7d\x43\x5c\x1d\xb7\x4b\xbb\xef\xa4\xb0\xaf\x16\x4d\x3d\xa9\x6f\xd7\x5d\xfb\xe4\x6d\xc2\x1e\xaf\xc3\x1e\xd7\xc0\xbe\xa1\xbe\x1e\xbd\x2f\xa1\xb6\xd7\x51\xdb\x35\xa8\x57\x8e\x7b\xd1\x73\x77\x0e\x9b\x5e\x02\x70\x78\x08\xf2\x81\xe2\x98\x78\x00\x69\x25\xaf\x28\x83\x53\x58\x48\x01\xcf\x9d\x94\x7f\x92\x69\x19\x95\x6f\x91\xcc\xe4\xaa\x4b\x7a\xfb\x93\x68\x58\x9a\x47\xad\xd6\xb3\x07\xf4\x32\xce\xfe\x7f\x07\x00\x00\xff\xff\xca\x3b\xf3\x4d\xa2\x0b\x00\x00")

func templatesUnmarshalCommandVgParamsTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUnmarshalCommandVgParamsTpl,
		"templates/unmarshal-command-vg-params.tpl",
	)
}

func templatesUnmarshalCommandVgParamsTpl() (*asset, error) {
	bytes, err := templatesUnmarshalCommandVgParamsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/unmarshal-command-vg-params.tpl", size: 2978, mode: os.FileMode(436), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUnmarshalVariantTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x6b\xdb\x40\x10\x85\xef\xfb\x2b\x5e\x43\x31\x12\xa2\x22\x04\x72\x71\xa2\x1c\x4a\xa1\xa7\xa4\xa5\x29\xb9\x14\x1d\xb6\xd1\xc8\x1e\xbc\xda\x2d\xab\x55\x5d\x77\x99\xff\x5e\x64\x5b\x96\x5c\x0c\xf1\xc1\x17\x69\x19\x8d\xe6\x7d\xef\xcd\xc6\xf8\xfe\xb7\xf6\xac\x6d\xc0\xbc\x40\xc2\xb6\xa2\x3f\xc8\x5f\xf6\xa5\xeb\x54\x24\x46\xae\x31\x34\xe5\x8f\xda\xaf\xc8\x7f\x22\xc3\x0d\x07\xaa\x44\x14\xd7\x30\x64\x93\x5f\x7a\x63\x9c\xae\x52\xdc\x17\x60\x44\x05\x78\x0a\x9d\xb7\x20\xef\x9d\x6f\xf3\x27\x5a\x27\x57\xad\xe1\x57\xc2\x4e\xc4\x75\x01\xae\xc6\x4f\xd7\xd9\xaa\xbd\x4a\x95\x28\xd5\xff\x55\x33\x99\xea\x39\x68\xbf\x05\xe2\xbe\xe2\x3c\xee\xc0\xb8\x3f\xd6\x99\xcd\xb0\x3f\xff\xe0\x12\xef\x0a\x8c\x56\xf6\x94\x2f\xda\x74\x24\x72\x07\xce\x32\x44\x51\xc0\x6b\x53\xe5\x31\x7e\x77\x9f\xdd\x93\x6e\x08\x79\xff\x14\x41\x71\x98\x34\xaa\xcf\xb9\x54\xa2\x62\x24\xd3\x92\xf4\x07\xae\x61\x69\x0c\xe2\xab\xf6\xba\xf9\x52\xd7\x2d\x05\xdc\xdc\xde\x5e\x3e\x08\x43\x76\x11\x96\xdb\xad\x0c\x74\x13\x87\x13\x79\x91\xec\xa6\x8c\x71\xcd\x61\x39\xe2\x3d\xf3\x5f\x1a\x3e\x3f\x3c\xc4\x98\xf7\x8b\x24\x5b\x89\xa4\xa7\x5a\x1f\x75\xbb\x12\x99\x4d\xfb\xce\x89\x8b\xe7\x9c\xb1\x0d\xc9\x8e\x35\x2d\x15\xc0\xc8\x0a\x4c\x6a\x87\x10\xf1\x5f\x80\xdf\xa8\xd1\x6c\xd9\x2e\x3e\x6e\x02\xb5\xb8\xbe\x6c\x82\x67\xa0\x4f\xa5\x3e\x4c\xa2\x3d\x06\x13\x29\xd5\xd6\x53\xdf\x7e\x7a\x6a\x3a\x5e\x93\xb7\x1c\x58\x36\x67\xd2\x95\x6a\xd8\xc3\xf0\xfe\x17\x00\x00\xff\xff\xd1\xea\xc0\x79\xab\x03\x00\x00")

func templatesUnmarshalVariantTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUnmarshalVariantTpl,
		"templates/unmarshal-variant.tpl",
	)
}

func templatesUnmarshalVariantTpl() (*asset, error) {
	bytes, err := templatesUnmarshalVariantTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/unmarshal-variant.tpl", size: 939, mode: os.FileMode(420), modTime: time.Unix(1541815439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/zwave-defs.xml":                       dataZwaveDefsXml,
	"templates/command-classes.tpl":             templatesCommandClassesTpl,
	"templates/command-struct-fields.tpl":       templatesCommandStructFieldsTpl,
	"templates/command.tpl":                     templatesCommandTpl,
	"templates/devices.tpl":                     templatesDevicesTpl,
	"templates/marshal-command-param.tpl":       templatesMarshalCommandParamTpl,
	"templates/marshal-command-params.tpl":      templatesMarshalCommandParamsTpl,
	"templates/marshal-command-vg-params.tpl":   templatesMarshalCommandVgParamsTpl,
	"templates/marshal-variant.tpl":             templatesMarshalVariantTpl,
	"templates/unmarshal-command-param.tpl":     templatesUnmarshalCommandParamTpl,
	"templates/unmarshal-command-params.tpl":    templatesUnmarshalCommandParamsTpl,
	"templates/unmarshal-command-vg-params.tpl": templatesUnmarshalCommandVgParamsTpl,
	"templates/unmarshal-variant.tpl":           templatesUnmarshalVariantTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"zwave-defs.xml": &bintree{dataZwaveDefsXml, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"command-classes.tpl":             &bintree{templatesCommandClassesTpl, map[string]*bintree{}},
		"command-struct-fields.tpl":       &bintree{templatesCommandStructFieldsTpl, map[string]*bintree{}},
		"command.tpl":                     &bintree{templatesCommandTpl, map[string]*bintree{}},
		"devices.tpl":                     &bintree{templatesDevicesTpl, map[string]*bintree{}},
		"marshal-command-param.tpl":       &bintree{templatesMarshalCommandParamTpl, map[string]*bintree{}},
		"marshal-command-params.tpl":      &bintree{templatesMarshalCommandParamsTpl, map[string]*bintree{}},
		"marshal-command-vg-params.tpl":   &bintree{templatesMarshalCommandVgParamsTpl, map[string]*bintree{}},
		"marshal-variant.tpl":             &bintree{templatesMarshalVariantTpl, map[string]*bintree{}},
		"unmarshal-command-param.tpl":     &bintree{templatesUnmarshalCommandParamTpl, map[string]*bintree{}},
		"unmarshal-command-params.tpl":    &bintree{templatesUnmarshalCommandParamsTpl, map[string]*bintree{}},
		"unmarshal-command-vg-params.tpl": &bintree{templatesUnmarshalCommandVgParamsTpl, map[string]*bintree{}},
		"unmarshal-variant.tpl":           &bintree{templatesUnmarshalVariantTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
